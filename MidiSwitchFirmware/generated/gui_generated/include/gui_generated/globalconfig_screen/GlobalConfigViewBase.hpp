/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GLOBALCONFIG_VIEW_BASE_HPP
#define GLOBALCONFIG_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/globalconfig_screen/GlobalConfigPresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>

#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
class GlobalConfigViewBase : public touchgfx::View<GlobalConfigPresenter>
{
public:
    GlobalConfigViewBase();
    virtual ~GlobalConfigViewBase() {}

    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Image ClobalCfgBG;
    touchgfx::Container ContrastBoxes;
    touchgfx::Box HeadlineBox;
    touchgfx::Box MidiChanalBox;
    touchgfx::Box BankNrBox;
    touchgfx::Box InitialPatchBox;

    touchgfx::Button Next;
    touchgfx::Button Pev;
    touchgfx::TextArea GlobalCfgHeadline;
    touchgfx::TextAreaWithOneWildcard MidiChannelVal;
    touchgfx::TextAreaWithOneWildcard BankNrVal;
    touchgfx::TextArea BankNr;
    touchgfx::TextArea MidiChannel;
    touchgfx::TextArea InitialPatch;
    touchgfx::TextAreaWithOneWildcard InitialPatchVal;

    /*
     * Wildcard Buffers
     */
    static const uint16_t MIDICHANNELVAL_SIZE = 4;
    touchgfx::Unicode::UnicodeChar MidiChannelValBuffer[MIDICHANNELVAL_SIZE];
    static const uint16_t BANKNRVAL_SIZE = 6;
    touchgfx::Unicode::UnicodeChar BankNrValBuffer[BANKNRVAL_SIZE];
    static const uint16_t INITIALPATCHVAL_SIZE = 4;
    touchgfx::Unicode::UnicodeChar InitialPatchValBuffer[INITIALPATCHVAL_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<GlobalConfigViewBase, const touchgfx::AbstractButton&> buttonCallback;

};

#endif // GLOBALCONFIG_VIEW_BASE_HPP
