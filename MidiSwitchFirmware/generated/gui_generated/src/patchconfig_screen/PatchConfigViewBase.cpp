/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/patchconfig_screen/PatchConfigViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

PatchConfigViewBase::PatchConfigViewBase()  :
    savingDelayCounter(0),
    buttonCallback(this, &PatchConfigViewBase::buttonCallbackHandler),
    headlinFadeEndedCallback(this, &PatchConfigViewBase::headlinFadeEndedCallbackHandler),
    programmFadeEndedCallback(this, &PatchConfigViewBase::programmFadeEndedCallbackHandler),
    switch1FadeEndedCallback(this, &PatchConfigViewBase::switch1FadeEndedCallbackHandler),
    switch2FadeEndedCallback(this, &PatchConfigViewBase::switch2FadeEndedCallbackHandler),
    defaultOutputFadeEndedCallback(this, &PatchConfigViewBase::defaultOutputFadeEndedCallbackHandler)
{
    ConfigBG.setXY(0, 0);
    ConfigBG.setBitmap(Bitmap(BITMAP_MIDISWITCHBGNOSHIP_ID));

    ContrastBoxes.setPosition(0, 1, 800, 480);

    Switch2Box.setPosition(0, 246, 300, 40);
    Switch2Box.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    Switch2Box.setAlpha(130);
    ContrastBoxes.add(Switch2Box);

    Switch1Box.setPosition(0, 197, 300, 40);
    Switch1Box.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    Switch1Box.setAlpha(130);
    ContrastBoxes.add(Switch1Box);

    ProgrammBox.setPosition(0, 147, 300, 40);
    ProgrammBox.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    ProgrammBox.setAlpha(130);
    ContrastBoxes.add(ProgrammBox);

    ConfigNrBox.setPosition(0, 97, 300, 40);
    ConfigNrBox.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    ConfigNrBox.setAlpha(130);
    ContrastBoxes.add(ConfigNrBox);

    HeadlineBox.setPosition(0, 6, 401, 53);
    HeadlineBox.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    HeadlineBox.setAlpha(130);
    ContrastBoxes.add(HeadlineBox);


    Next.setPosition(750, 434, 32, 30);
    Next.setBitmaps(Bitmap(BITMAP_DARK_ICONS_GO_NEXT_32_ID), Bitmap(BITMAP_DARK_ICONS_GO_NEXT_32_ID));
    Next.setAlpha(200);

    Prev.setPosition(15, 434, 32, 30);
    Prev.setBitmaps(Bitmap(BITMAP_DARK_ICONS_GO_BACK_32_ID), Bitmap(BITMAP_DARK_ICONS_GO_BACK_32_ID));
    Prev.setAlpha(200);

    Switch2Nr.setPosition(15, 252, 140, 31);
    Switch2Nr.setColor(touchgfx::Color::getColorFrom24BitRGB(135, 135, 135));
    Switch2Nr.setLinespacing(0);
    Switch2Nr.setAlpha(0);
    Switch2Nr.setTypedText(TypedText(T_SINGLEUSEID8));

    Switch1Nr.setPosition(15, 202, 140, 31);
    Switch1Nr.setColor(touchgfx::Color::getColorFrom24BitRGB(135, 135, 135));
    Switch1Nr.setLinespacing(0);
    Switch1Nr.setAlpha(0);
    Switch1Nr.setTypedText(TypedText(T_SINGLEUSEID7));

    ProgramNr.setPosition(15, 103, 140, 31);
    ProgramNr.setColor(touchgfx::Color::getColorFrom24BitRGB(135, 135, 135));
    ProgramNr.setLinespacing(0);
    ProgramNr.setAlpha(0);
    ProgramNr.setTypedText(TypedText(T_SINGLEUSEID6));

    PatchConfigHeadline.setXY(10, 10);
    PatchConfigHeadline.setColor(touchgfx::Color::getColorFrom24BitRGB(135, 135, 135));
    PatchConfigHeadline.setLinespacing(0);
    PatchConfigHeadline.setAlpha(0);
    PatchConfigHeadline.setTypedText(TypedText(T_SINGLEUSEID3));

    OutputBox.setPosition(414, 98, 363, 194);
    OutputBox.setVisible(false);

    OutputCfgBox.setPosition(0, 0, 363, 194);
    OutputCfgBox.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    OutputCfgBox.setAlpha(130);
    OutputBox.add(OutputCfgBox);

    OutputConfig.setXY(46, 5);
    OutputConfig.setColor(touchgfx::Color::getColorFrom24BitRGB(135, 135, 135));
    OutputConfig.setLinespacing(0);
    OutputConfig.setTypedText(TypedText(T_SINGLEUSEID5));
    OutputBox.add(OutputConfig);

    outputCfg_2.setXY(5, 146);
    OutputBox.add(outputCfg_2);

    outputCfg_1.setXY(5, 96);
    OutputBox.add(outputCfg_1);

    outputCfg_0.setXY(5, 46);
    OutputBox.add(outputCfg_0);


    options.setPosition(729, 10, 48, 48);
    options.setVisible(false);
    options.setBitmaps(Bitmap(BITMAP_DARK_ICONS_SETTINGS_48_ID), Bitmap(BITMAP_DARK_ICONS_SETTINGS_48_ID));
    options.setAction(buttonCallback);
    options.setAlpha(200);

    Save.setPosition(657, 12, 48, 41);
    Save.setVisible(false);
    Save.setBitmaps(Bitmap(BITMAP_DARK_ICONS_INBOX_48_ID), Bitmap(BITMAP_DARK_ICONS_INBOX_48_ID));
    Save.setAction(buttonCallback);
    Save.setAlpha(200);

    TeachButton.setPosition(517, 14, 113, 40);
    TeachButton.setVisible(false);
    TeachButton.setBitmaps(Bitmap(BITMAP_TEACH_ROUND_SMALL_ID), Bitmap(BITMAP_TEACH_ROUND_SMALL_PRESSED_ID));
    TeachButton.setAlpha(200);

    SaveingPopUp.setPosition(237, 354, 313, 94);
    SaveingPopUp.setVisible(false);

    SaveingBox.setPosition(-1, 0, 314, 94);
    SaveingBox.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    SaveingBox.setAlpha(130);
    SaveingPopUp.add(SaveingBox);

    Saveing.setXY(3, 4);
    Saveing.setColor(touchgfx::Color::getColorFrom24BitRGB(135, 135, 135));
    Saveing.setLinespacing(0);
    Saveing.setTypedText(TypedText(T_SINGLEUSEID12));
    SaveingPopUp.add(Saveing);


    progNrVal.setPosition(225, 103, 70, 31);
    progNrVal.setVisible(false);
    progNrVal.setColor(touchgfx::Color::getColorFrom24BitRGB(135, 135, 135));
    progNrVal.setLinespacing(0);
    progNrVal.setTypedText(TypedText(T_SINGLEUSEID15));
    progNrValBuffer[0] = 0;
    progNrVal.setWildcard(progNrValBuffer);

    switch1ConNrVal.setPosition(155, 202, 70, 31);
    switch1ConNrVal.setVisible(false);
    switch1ConNrVal.setColor(touchgfx::Color::getColorFrom24BitRGB(135, 135, 135));
    switch1ConNrVal.setLinespacing(0);
    switch1ConNrVal.setTypedText(TypedText(T_SINGLEUSEID14));
    switch1ConNrValBuffer[0] = 0;
    switch1ConNrVal.setWildcard(switch1ConNrValBuffer);

    switch1ConValueVal.setPosition(225, 202, 70, 31);
    switch1ConValueVal.setVisible(false);
    switch1ConValueVal.setColor(touchgfx::Color::getColorFrom24BitRGB(135, 135, 135));
    switch1ConValueVal.setLinespacing(0);
    switch1ConValueVal.setTypedText(TypedText(T_SINGLEUSEID16));
    switch1ConValueValBuffer[0] = 0;
    switch1ConValueVal.setWildcard(switch1ConValueValBuffer);

    switch2ConNrVal.setPosition(155, 252, 70, 31);
    switch2ConNrVal.setVisible(false);
    switch2ConNrVal.setColor(touchgfx::Color::getColorFrom24BitRGB(135, 135, 135));
    switch2ConNrVal.setLinespacing(0);
    switch2ConNrVal.setTypedText(TypedText(T_SINGLEUSEID17));
    switch2ConNrValBuffer[0] = 0;
    switch2ConNrVal.setWildcard(switch2ConNrValBuffer);

    switch2ConValueVal.setPosition(225, 252, 70, 31);
    switch2ConValueVal.setVisible(false);
    switch2ConValueVal.setColor(touchgfx::Color::getColorFrom24BitRGB(135, 135, 135));
    switch2ConValueVal.setLinespacing(0);
    switch2ConValueVal.setTypedText(TypedText(T_SINGLEUSEID18));
    switch2ConValueValBuffer[0] = 0;
    switch2ConValueVal.setWildcard(switch2ConValueValBuffer);

    DefaultOutput.setPosition(15, 152, 276, 29);
    DefaultOutput.setColor(touchgfx::Color::getColorFrom24BitRGB(135, 135, 135));
    DefaultOutput.setLinespacing(0);
    DefaultOutput.setAlpha(0);
    DefaultOutput.setTypedText(TypedText(T_SINGLEUSEID19));

    add(ConfigBG);
    add(ContrastBoxes);
    add(Next);
    add(Prev);
    add(Switch2Nr);
    add(Switch1Nr);
    add(ProgramNr);
    add(PatchConfigHeadline);
    add(OutputBox);
    add(options);
    add(Save);
    add(TeachButton);
    add(SaveingPopUp);
    add(progNrVal);
    add(switch1ConNrVal);
    add(switch1ConValueVal);
    add(switch2ConNrVal);
    add(switch2ConValueVal);
    add(DefaultOutput);
}

//Handles delays
void PatchConfigViewBase::handleTickEvent()
{
    View::handleTickEvent();
    if(savingDelayCounter > 0)
    {
        savingDelayCounter--;
        if(savingDelayCounter == 0)
        {
            //HideSaveingPopUp
            //When SavingDelay completed hide SaveingPopUp
            //Hide SaveingPopUp
            SaveingPopUp.setVisible(false);
            SaveingPopUp.invalidate();
        }
    }
}

//Called when the screen is done with transition/load
void PatchConfigViewBase::afterTransition()
{
    //HeadlinFade
    //When screen is entered fade PatchConfigHeadline
    //Fade PatchConfigHeadline to alpha:255 with LinearIn easing in 200 ms (12 Ticks)
    PatchConfigHeadline.clearFadeAnimationEndedAction();
    PatchConfigHeadline.startFadeAnimation(255, 12, EasingEquations::linearEaseIn);
    PatchConfigHeadline.setFadeAnimationEndedAction(headlinFadeEndedCallback);
}

void PatchConfigViewBase::headlinFadeEndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::TextArea>& comp)
{
    //ProgrammFade
    //When HeadlinFade completed fade ProgramNr
    //Fade ProgramNr to alpha:255 with LinearIn easing in 200 ms (12 Ticks)
    ProgramNr.clearFadeAnimationEndedAction();
    ProgramNr.startFadeAnimation(255, 12, EasingEquations::linearEaseIn);
    ProgramNr.setFadeAnimationEndedAction(programmFadeEndedCallback);
}

void PatchConfigViewBase::programmFadeEndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::TextArea>& comp)
{
    //DefaultOutputFade
    //When ProgrammFade completed fade DefaultOutput
    //Fade DefaultOutput to alpha:255 with LinearIn easing in 200 ms (12 Ticks)
    DefaultOutput.clearFadeAnimationEndedAction();
    DefaultOutput.startFadeAnimation(255, 12, EasingEquations::linearEaseIn);
    DefaultOutput.setFadeAnimationEndedAction(defaultOutputFadeEndedCallback);
}

void PatchConfigViewBase::switch1FadeEndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::TextArea>& comp)
{
    //Switch2Fade
    //When Switch1Fade completed fade Switch2Nr
    //Fade Switch2Nr to alpha:255 with LinearIn easing in 200 ms (12 Ticks)
    Switch2Nr.clearFadeAnimationEndedAction();
    Switch2Nr.startFadeAnimation(255, 12, EasingEquations::linearEaseIn);
    Switch2Nr.setFadeAnimationEndedAction(switch2FadeEndedCallback);
}

void PatchConfigViewBase::switch2FadeEndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::TextArea>& comp)
{
    //ShowOutputBox
    //When Switch2Fade completed show OutputBox
    //Show OutputBox
    OutputBox.setVisible(true);
    OutputBox.invalidate();

    //ShowOptions
    //When Switch2Fade completed show options
    //Show options
    options.setVisible(true);
    options.invalidate();

    //ShowSave
    //When Switch2Fade completed show Save
    //Show Save
    Save.setVisible(true);
    Save.invalidate();

    //ShowTeach
    //When Switch2Fade completed show TeachButton
    //Show TeachButton
    TeachButton.setVisible(true);
    TeachButton.invalidate();

    //showProgNrVal
    //When ShowTeach completed show progNrVal
    //Show progNrVal
    progNrVal.setVisible(true);
    progNrVal.invalidate();

    //showSwitch1ConNrVal
    //When showProgNrVal completed show switch1ConNrVal
    //Show switch1ConNrVal
    switch1ConNrVal.setVisible(true);
    switch1ConNrVal.invalidate();

    //showSwitch1ConValueVal
    //When showSwitch1ConNrVal completed show switch1ConValueVal
    //Show switch1ConValueVal
    switch1ConValueVal.setVisible(true);
    switch1ConValueVal.invalidate();

    //showSwitch2ConNrVal
    //When showSwitch1ConValueVal completed show switch2ConNrVal
    //Show switch2ConNrVal
    switch2ConNrVal.setVisible(true);
    switch2ConNrVal.invalidate();

    //showSwitch2ConValueVal
    //When showSwitch2ConNrVal completed show switch2ConValueVal
    //Show switch2ConValueVal
    switch2ConValueVal.setVisible(true);
    switch2ConValueVal.invalidate();
}

void PatchConfigViewBase::defaultOutputFadeEndedCallbackHandler(const touchgfx::FadeAnimator<touchgfx::TextArea>& comp)
{
    //Switch1Fade
    //When DefaultOutputFade completed fade Switch1Nr
    //Fade Switch1Nr to alpha:255 with LinearIn easing in 200 ms (12 Ticks)
    Switch1Nr.clearFadeAnimationEndedAction();
    Switch1Nr.startFadeAnimation(255, 12, EasingEquations::linearEaseIn);
    Switch1Nr.setFadeAnimationEndedAction(switch1FadeEndedCallback);
}

void PatchConfigViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Next)
    {

    }
    else if (&src == &Prev)
    {

    }
    else if (&src == &options)
    {
        //OptionsButtonPressed
        //When options clicked change screen to GlobalConfig
        //Go to GlobalConfig with slide screen transition towards North
        application().gotoGlobalConfigScreenSlideTransitionNorth();
    }
    else if (&src == &Save)
    {
        //SavePopup
        //When Save clicked show SaveingPopUp
        //Show SaveingPopUp
        SaveingPopUp.setVisible(true);
        SaveingPopUp.invalidate();

        //SavingDelay
        //When SavePopup completed delay
        //Delay for 1000 ms (60 Ticks)
        savingDelayCounter = SAVINGDELAY_DURATION;
    }
    else if (&src == &TeachButton)
    {

    }
}
